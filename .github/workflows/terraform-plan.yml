name: Terraform Plan

on:
  pull_request:
    branches:
      - master

permissions:
  contents: read
  pull-requests: write

jobs:
  terraform-plan:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      run: |
        mkdir -p ~/.aws
        echo "[default]" > ~/.aws/credentials
        echo "aws_access_key_id=${AWS_ACCESS_KEY_ID}" >> ~/.aws/credentials
        echo "aws_secret_access_key=${AWS_SECRET_ACCESS_KEY}" >> ~/.aws/credentials

    - name: Initialize Terraform
      run: terraform init -backend-config="bucket=${{ secrets.BUCKET_NAME }}" -backend-config="key=${{ secrets.KEY_STATE }}" -backend-config="region=${{ secrets.AWS_DEFAULT_REGION }}"

    - name: Download terraform.tfvars from S3
      run: |
        echo "Downloading terraform.tfvars from S3..."
        aws s3 cp "s3://${{ secrets.BUCKET_NAME }}/${{ secrets.KEY_TFVARS }}" terraform.tfvars
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Run Terraform Plan
      run: terraform plan -var-file="terraform.tfvars" -out=tfplan

    - name: Convert Terraform Plan to readable format
      run: terraform show -no-color tfplan > plan.txt

    - name: Comment on PR with Terraform Plan
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          const planOutput = fs.readFileSync('plan.txt', 'utf8');
          const commentBody = `
          ## Terraform Plan Result
          \`\`\`hcl
          ${planOutput}
          \`\`\`
          `;
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: commentBody,
          });
